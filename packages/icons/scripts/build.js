const glob = require('glob');
const path = require('path');
const fs = require('fs-extra');
const svgr = require('@svgr/core').default;
const camelCase = require('lodash.camelcase');
const upperFirst = require('lodash.upperfirst');

const svgPaths = glob.sync('./svg/*');
const outputDir = './dist';
fs.ensureDirSync(outputDir);

/** Create dist/index.tsx */
const code = [
  `
    // This component is generated by the build script ðŸ¤–
    // Please don't modify this file.

    import React from 'react'
  `,
];

function template(
  { template },
  opts,
  { imports, componentName, props, jsx, exports }
) {
  const typeScriptTpl = template.smart({ plugins: ['typescript'] });
  return typeScriptTpl.ast`
    export const ${componentName} = (props: React.SVGProps<SVGSVGElement>) => ${jsx};
  `;
}

svgPaths.forEach((filepath, index) => {
  const source = fs.readFileSync(filepath, 'utf8');

  const { name } = path.parse(filepath);

  const componentCode = svgr.sync(
    source,
    {
      template,
      svgProps: { height: 32, width: 32, viewBox: '0 0 32 32' },
      plugins: ['@svgr/plugin-svgo', '@svgr/plugin-jsx'],
      svgoConfig: { plugins: [{ convertColors: { currentColor: true } }] },
    },
    {
      componentName: upperFirst(camelCase(name)),
    }
  );

  code.push(componentCode);
});

const contents = code.join('\n');
fs.writeFileSync(path.join(outputDir, 'index.tsx'), contents, 'utf8');
